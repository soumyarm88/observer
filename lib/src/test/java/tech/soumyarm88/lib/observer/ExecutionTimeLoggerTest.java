/*
 * This source file was generated by the Gradle 'init' task
 */
package tech.soumyarm88.lib.observer;

import org.junit.jupiter.api.Test;
import tech.soumyarm88.lib.testutil.SomeClass;
import tech.soumyarm88.lib.testutil.StdOutCaptor;

import static org.assertj.core.api.Assertions.assertThat;
import static org.assertj.core.api.Assertions.assertThatExceptionOfType;

class ExecutionTimeLoggerTest {
    @Test
    void executionTimeIsLoggedWhenMethodInvocationIsSuccessful() {
        String log = StdOutCaptor.captureStdOut(() -> {
            SomeClass classUnderTest = new SomeClass();
            assertThat(classUnderTest.someMethod()).isTrue();
        });

        System.out.println(log);

        assertThat(log).contains("SomeClass.someMethod() executed in");
    }

    @Test
    void executionTimeIsLoggedWhenMethodInvocationThrowsException() {
        String log = StdOutCaptor.captureStdOut(() -> {
            SomeClass classUnderTest = new SomeClass();
            assertThatExceptionOfType(RuntimeException.class)
                    .isThrownBy(() -> classUnderTest.someOtherMethod())
                    .withMessage("Something went wrong");
        });

        System.out.println(log);

        assertThat(log).contains("SomeClass.someOtherMethod() executed in");
    }
}
